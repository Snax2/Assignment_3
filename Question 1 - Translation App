import tkinter as tk
from tkinter import ttk
from tkinter import messagebox
import googletrans
import textblob

#Utilising clases (encapsulation) to simplfy the data
#This also uses polymorphism for the def run to run multiple sections smoothly
class Main:
    def __init__(self, root):
        self.root = root
        self.root.title("Translation App")
        self.root.geometry("1100x500")
        self.root.resizable(True, True)
        self.root.configure(background="#59ABDD")

    def run(self):
        self.root.mainloop()

#This section uses multiple inheritance to create widgets for the gui and functions for widgets within the main class
class Interface(Main):
    def __init__(self, root):
        super().__init__(root)
        self.create_widgets()

    def create_widgets(self):
        self.languages = googletrans.LANGUAGES
        self.language_list = list(self.languages.values())
        
        self.label = tk.Label(self.root, text="Welcome to the Language Translator", font = ("Agency FB", 18))
        self.label.grid(row = 0, column = 2, ipadx = 10, pady = 10)

        self.label = tk.Label(self.root, text="Enter your text:", font = ("Agency FB", 14))
        self.label.grid(row = 0, column = 1, ipadx = 20)

        self.label = tk.Label(self.root, text="Translated text:", font = ("Agency FB", 14))
        self.label.grid(row = 0, column = 3, ipadx = 20)

        self.input_text = tk.Text(self.root, height = 20, width = 45)
        self.input_text.grid(row = 1, column = 1, pady=10, padx = 10)

        self.output_text = tk.Text(self.root, height = 20, width = 45)
        self.output_text.grid(row = 1, column = 3, pady=10, padx = 10)

        self.input_language = ttk.Combobox(self.root, width = 50, value = self.language_list)
        self.input_language.grid(row = 2, column = 1, pady=10, padx = 10)
        self.input_language.current(21)

        self.output_language = ttk.Combobox(self.root, width = 50, value = self.language_list)
        self.output_language.grid(row = 2, column = 3, pady=10, padx = 10)
        self.output_language.current(15)

        self.translate_button = tk.Button(self.root, text="Translate", font = ("Agency FB", 22), background = ("#F9E988"), command = self.translate_text)
        self.translate_button.grid(row = 2, column = 2)

        self.clear_button = tk.Button(self.root, text = "CLEAR", font = (12), bg =  ("#D2736B") , command = self.clear_all)
        self.clear_button.grid(row = 1, column = 2)

        self.messagebox = messagebox


    def translate_text(self):
        try:
            self.output_text.delete(1.0, tk.END)
            for key, value in self.languages.items():
                if (value == self.input_language.get()):
                    from_language_key = key
            for key, value in self.languages.items():
                if (value == self.output_language.get()):
                    to_language_key = key

            words = textblob.TextBlob(self.input_text.get(1.0, tk.END))
            words = words.translate(from_lang=from_language_key, to=to_language_key)

            self.output_text.insert(1.0, words)
        except:
            self.messagebox.showerror("Input error", "There is an error with the input, please try again." "\n" "\n" "This may be because:" "\n"
                                "1. The text to be translated is identical in both languages selected." "\n" "2. There is a typing error in the input." "\n" "\n" "Please analyse your input and try again.")

    def clear_all(self):
        self.input_text.delete(1.0, tk.END)
        self.output_text.delete(1.0, tk.END)

def main():
    root = tk.Tk()
    app = Interface(root)
    app.run()

if __name__ == "__main__":
    main()
